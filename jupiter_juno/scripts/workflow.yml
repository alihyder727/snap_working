name: juno mwr inversion workflow
jobs:
  mwr-global:
    steps:
      - name: prepare global averaged observation
        run: ./prepare_juno_mwr.py --case=global &> log.mwr_global
  mwr-zonal:
    steps:
      - name: prepare zonally averaged observation
        run: ./prepare_juno_mwr.py --case=zonal &> log.mwr_zonal
  global-ammonia:
    needs: mwr-global
    env:
      LEVELS: 10
      WALKERS: 20
      NODES: 10
      OBS: mwr_PJ1-12_global.obs
      NAME: global-nh3-$LEVELS-$NH3
    strategy:
      vector: 
        NH3: [2., 2.25, 2.5, 2.75, 3.]
      matrix:
        LEVELS: [8, 10, 12]
    steps:
      - name: create inversion input file at $LEVELS levels with $WALKERS walkers
        run: >
          ./create_input.py -M -i juno_mwr.tmp
          --qNH3=$NH3
          --pmax=300. --plevel=100:0.5:$LEVELS
          --nwalker=$WALKERS --nodes=$NODES --nlim=2000
          --obs=$OBS -o $NAME &> log.$NAME
      - name: run ammonia inversion model using $NODES cores in parallel
        run: mpiexec -n $NODES ./juno_mwr.ex -i juno_mwr-$NAME.inp < /dev/null &>> log.$NAME
      - name: combine outputs
        run: ./combine.py &>> log.$NAME
      - name: make sequence plot
        run: ./plot_mcmc_sequence.py -i juno_mwr-$NAME &>> log.$NAME
      - name: make profile plot
        run: ./plot_mcmc_profile.py -i juno_mwr-$NAME --pmax=300. &>> log.$NAME
      - name: move results to archive
        run: mv juno_mwr-$NAME* data/
  global-temperature:
    needs: mwr-global
    env:
      LEVELS: 10
      WALKERS: 20
      NODES: 10
      NH3: 2.2
      OBS: mwr_PJ1-12_global.obs
      NAME: global-tem-$LEVELS-$NH3
    steps:
      - name: create inversion input file at $LEVELS levels with $WALKERS walkers
        run: >
          ./create_input.py -M -i juno_mwr.tmp --var=0 
          --qNH3=$NH3
          --pmax=300. --plevel=100:0.5:$LEVELS
          --nwalker=$WALKERS --nodes=$NODES --nlim=2000
          --obs=$OBS -o $NAME &> log.$NAME
      - name: run temperature inversion model using $NODES cores in parallel
        run: mpiexec -n $NODES ./juno_mwr.ex -i juno_mwr-$NAME.inp < /dev/null &>> log.$NAME
      - name: combine outputs
        run: ./combine.py &>> log.$NAME
      - name: make sequence plot
        run: ./plot_mcmc_sequence.py -i juno_mwr-$NAME --var=tem &>> log.$NAME
      - name: make profile plot
        run: ./plot_mcmc_profile.py -i juno_mwr-$NAME --pmax=300. --var=tem &>> log.$NAME
      - name: move results to archive
        run: mv juno_mwr-$NAME* data/
  global-temperature-ammonia:
    needs: [global-ammonia, global-temperature]
    env:
      LEVELS: 8
      WALKERS: 64
      NODES: 32
      NH3: 2.2
      OBS: mwr_PJ1-12_global.obs
      NAME: global-tem-nh3-$LEVELS-$NH3
    steps:
      - name: create inversion input file at $LEVELS levels with $WALKERS walkers
        run: >
          ./create_input.py -M -i juno_mwr.tmp --var="0 2"
          --qNH3=$NH3
          --pmax=300. --plevel=100:0.5:$LEVELS
          --nwalker=$WALKERS --nodes=$NODES --nlim=2000
          --obs=$OBS -o $NAME &> log.$NAME
      - name: run temperature inversion model using $NODES cores in parallel
        run: mpiexec -n $NODES ./juno_mwr.ex -i juno_mwr-$NAME.inp < /dev/null &>> log.$NAME
      - name: combine outputs
        run: ./combine.py &>> log.$NAME
      - name: make sequence plot
        run: ./plot_mcmc_sqeuence.py -i juno_mwr-$NAME --var=tem,nh3 &>> log.$NAME
      - name: make profile plot
        run: ./plot_mcmc_profile.py -i juno_mwr-$NAME --pmax=300. --var=tem,nh3 &>> log.$NAME
      - name: move results to archive
        run: mv juno_mwr-$NAME* data/
  zonal-ammonia:
    needs: mwr-zonal
    skip: true
    env:
      LEVELS: 10
      WALKERS: 20
      NODES: 10
      NH3: 2.3
      OBS: mwr_PJ1-12_zonal_$CLAT.obs
      NAME: zonal-nh3-$LEVELS-$NH3-$CLAT
    strategy:
      vector: 
        CLAT: mwr_PJ1-12_zonal_lats.txt
    steps:
      - name: create inversion input file at $LEVELS levels with $WALKERS walkers
        run: >
          ./create_input.py -d -i juno_mwr.tmp
          --qNH3=$NH3
          --pmax=300. --plevel=100:0.5:$LEVELS
          --nwalker=$WALKERS --nodes=$NODES --nlim=1000
          --obs=$OBS -o $NAME &>> log.$NAME
      - name: run ammonia inversion model using $NODES cores in parallel
        run: mpiexec -n $NODES ./juno_mwr.ex -i juno_mwr-$NAME.inp < /dev/null &>> log.$NAME
      - name: combine outputs
        run: ./combine.py --no-merge --no-main2mcmc &>> log.$NAME
      - name: make mcmc sequence plot
        run: ./plot_mcmc_sequence.py -i juno_mwr-$NAME &>> log.$NAME
      - name: make mcmc profile plot
        run: ./plot_mcmc_profile.py -i juno_mwr-$NAME --pmax=300. &>> log.$NAME
      - name: move results to archive
        run: mv juno_mwr-$NAME* ~/coe-chengcli/mwr2/
  zonal-temperature:
    needs: mwr-zonal
    skip: true
    env:
      LEVELS: 10
      WALKERS: 20
      NODES: 10
      NH3: 2.3
      OBS: mwr_PJ1-12_zonal_$CLAT.obs
      NAME: zonal-tem-$LEVELS-$NH3-$CLAT
    strategy:
      vector: 
        CLAT: mwr_PJ1-12_zonal_lats.txt
    steps:
      - name: create inversion input file at $LEVELS levels with $WALKERS walkers
        run: >
          ./create_input.py -d -i juno_mwr.tmp --var=0
          --qNH3=$NH3
          --pmax=300. --plevel=100:0.5:$LEVELS
          --nwalker=$WALKERS --nodes=$NODES --nlim=2000
          --obs=$OBS -o $NAME &>> log.$NAME
      - name: run ammonia inversion model using $NODES cores in parallel
        run: mpiexec -n $NODES ./juno_mwr.ex -i juno_mwr-$NAME.inp < /dev/null &>> log.$NAME
      - name: combine outputs
        run: ./combine.py --no-merge --no-main2mcmc &>> log.$NAME
      - name: make mcmc sequence plot
        run: ./plot_mcmc_squence.py -i juno_mwr-$NAME &>> log.$NAME
      - name: make mcmc profile plot
        run: ./plot_mcmc_profile.py -i juno_mwr-$NAME --pmax=300. &>> log.$NAME
      - name: move results to archive
        run: mv juno_mwr-$NAME* ~/coe-chengcli/mwr2/
  zonal-temperature-ammonia:
    needs: mwr-zonal
    skip: true
    env:
      LEVELS: 8
      WALKERS: 64
      NODES: 32
      NH3: 2.3
      OBS: mwr_PJ1-12_zonal_$CLAT.obs
      NAME: zonal-tem-nh3-$LEVELS-$NH3-$CLAT
    strategy:
      vector: 
        CLAT: mwr_PJ1-12_zonal_lats.txt
    steps:
      - name: create inversion input file at $LEVELS levels with $WALKERS walkers
        run: >
          ./create_input.py -d -i juno_mwr.tmp --var="0 2"
          --qNH3=$NH3
          --pmax=300. --plevel=100:0.5:$LEVELS
          --nwalker=$WALKERS --nodes=$NODES --nlim=2000
          --obs=$OBS -o $NAME &>> log.$NAME
      - name: run ammonia inversion model using $NODES cores in parallel
        run: mpiexec -n $NODES ./juno_mwr.ex -i juno_mwr-$NAME.inp < /dev/null &>> log.$NAME
      - name: combine outputs
        run: ./combine.py --no-merge --no-main2mcmc &>> log.$NAME
      - name: make mcmc sequence plot
        run: ./plot_mcmc_sequencd.py -i juno_mwr-$NAME &>> log.$NAME
      - name: make mcmc profile plot
        run: ./plot_mcmc_profile.py -i juno_mwr-$NAME --pmax=300. &>> log.$NAME
      - name: move results to archive
        run: mv juno_mwr-$NAME* ~/coe-chengcli/mwr2/
